version: '3.7'

secrets:
  cf_dns_token:
    file: "./secrets/cf_dns_token.secret"
  basicauth_users:
    file: "./secrets/basicauth_users.secret"

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesResolvers.myresolver.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL:?Set $$EMAIL in env}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--serverstransport.insecureskipverify"
      # Uncomment below lines for testing
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      #- "--log.level=DEBUG"
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./appdata/letsencrypt:/letsencrypt
    environment:
      - "CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns_token"
    secrets:
      - "cf_dns_token"
      - "basicauth_users"
    labels:
      # global redirect to https
      - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'

      # global wildcard cert
      - 'traefik.http.routers.wildcard-certs.tls.certresolver=myresolver'
      - 'traefik.http.routers.wildcard-certs.tls.domains[0].main=${HOST_URL:?Set $$HOST_URL in env}'
      - 'traefik.http.routers.wildcard-certs.tls.domains[0].sans=*.${HOST_URL:?Set $$HOST_URL in env}'

      # dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersFile=/run/secrets/basicauth_users"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"

  cloudflare-ddns:
    image: oznu/cloudflare-ddns
    restart: unless-stopped
    environment:
      - API_KEY=${CLOUDFLARE_API_KEY:?Set $$CLOUDFLARE_API_KEY in env}
      - ZONE=${HOST_URL:?Set $$HOST_URL in env}

  home-assistant:
    image: homeassistant/home-assistant:stable
    volumes:
      - ./appdata/home-assistant:/config
    ports:
      - "8123:8123"
#    devices:
#      - "/dev/serial/by-id/usb-0658_0200-if00:/dev/ttyACM0"
    environment:
      - TZ=America/Chicago
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.home-assistant.rule=Host(`ha.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.home-assistant.entrypoints=websecure"
      - "traefik.http.routers.home-assistant.tls=true"

  nzbget:
    image: linuxserver/nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./appdata/nzbget/config:/config
      - ./appdata/nzbget/downloads:/downloads
    ports:
      - 6789:6789
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls=true"
      - "traefik.http.routers.nzbget.middlewares=auth"

  nzbhydra2:
    image: linuxserver/nzbhydra2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./appdata/nzbhydra2:/config
    ports:
      - 5076:5076
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hydra.rule=Host(`hydra.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.hydra.entrypoints=websecure"
      - "traefik.http.routers.hydra.tls=true"
      - "traefik.http.routers.hydra.middlewares=auth"

  plex:
    image: plexinc/pms-docker
    restart: unless-stopped
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - TZ=America/Chicago
      - ADVERTISE_IP=http://192.168.1.100:32400/
      - PLEX_UID=1000
      - PLEX_GID=1000
    hostname: mioplex
    volumes:
      - ./appdata/plex/database:/config
      - ./appdata/plex/transcode:/transcode
      - /mnt/storage/movies:/movies
      - /mnt/storage/tv:/tv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  radarr:
    image: linuxserver/radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./appdata/radarr:/config
      - /mnt/storage/movies:/movies
      - ./appdata/nzbget/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.middlewares=auth"

  sonarr:
    image: linuxserver/sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./appdata/sonarr:/config
      - /mnt/storage/tv:/tv
      - ./appdata/nzbget/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.middlewares=auth"

  speedtest:
    image: "adolfintel/speedtest:latest"
    environment:
      - TITLE=${HOST_NAME:?Set $$HOST_NAME in env} Speedtest
      - MODE=standalone
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.rule=Host(`speedtest.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.speedtest.entrypoints=websecure"
      - "traefik.http.routers.speedtest.tls=true"
      # - "traefik.http.routers.speedtest.tls.certresolver=myresolver"
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./appdata/tautulli:/config
      - ./appdata/plex/database/Library/Application Support/Plex Media Server/Logs:/logs:ro
    ports:
      - 8181:8181
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls=true"

  transmission:
    image: ghcr.io/linuxserver/transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
      #- USER=username #optional
      #- PASS=password #optional
    volumes:
      - ./appdata/tranmission/config:/config
      - ./appdata/tranmission/downloads:/downloads
      - ./appdata/tranmission/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"

  unifi:
    image: jacobalberty/unifi:stable-6
    volumes:
      - ./appdata/unifi:/unifi
    environment:
      - TZ=America/Chicago
      - UNIFI_UID=1000
      - UNIFI_GID=1000
    ports:
      - "8080:8080"
      # - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`unifi.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.tls=true"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"

  zwavejs:
    image: zwavejs/zwavejs2mqtt:latest
    ports:
      - 8091:8091
      - 3000:3000
    devices:
      - "/dev/serial/by-id/usb-0658_0200-if00:/dev/zwave"
    volumes:
      - ./appdata/zwavejs:/user/src/app/store
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zwavejs.rule=Host(`zwavejs.${HOST_URL:?Set $$HOST_URL in env}`)"
      - "traefik.http.routers.zwavejs.entrypoints=websecure"
      - "traefik.http.routers.zwavejs.tls=true"
      - "traefik.http.services.zwavejs.loadbalancer.server.port=8091"
      - "traefik.http.routers.zwavejs.middlewares=auth"

